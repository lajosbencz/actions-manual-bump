name: Manual Version Bump

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Which SemVer level to bump'
        type: choice
        required: true
        default: patch
        options:
          - major
          - premajor
          - minor
          - preminor
          - patch
          - prepatch
          - prerelease
      prefix_with_v:
        description: 'Prefix the version with a "v"'
        type: choice
        required: false
        default: 'true'
        options:
          - 'true'
          - 'false'
      filter:
        description: 'Filter for the tag to bump, for eg: 1.2'
        required: false
      prerelease_base:
        description: 'Prerelease Identifier Base'
        required: false

permissions:
  contents: write

jobs:
  bump:
    name: Bump Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Calculate new tag
        id: tag
        uses: ./
        with:
          release_type: '${{ github.event.inputs.release_type }}'
          push: 'false'
          prefix_with_v: '${{ github.event.inputs.prefix_with_v }}'
          filter: '${{ github.event.inputs.filter }}'
          prerelease_identifier_base:
            '${{ github.event.inputs.prerelease_base }}'

      - name: Update package.json version
        run: 'script/npm-version ${{ steps.tag.outputs.new_tag_semver }}'

      - name: Commit package.json version
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: bump package.json version
          file_pattern: 'package.json'

      - name: Run Local Action
        id: tag-push
        uses: ./
        with:
          release_type: '${{ github.event.inputs.release_type }}'
          push: 'true'
          prefix_with_v: '${{ github.event.inputs.prefix_with_v }}'
          filter: '${{ github.event.inputs.filter }}'
          prerelease_identifier_base:
            '${{ github.event.inputs.prerelease_base }}'

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: '${{ steps.tag.outputs.new_tag }}'
          draft: ${{ steps.tag.outputs.draft }}
          prerelease: ${{ steps.tag.outputs.prerelease }}
          generate_release_notes: true
          files: |
            README.md
            LICENSE

      - name: Print Output
        id: output
        run: |
          echo "tag:"
          echo "  old: ${{ steps.tag.outputs.old_tag }}"
          echo "  new: ${{ steps.tag.outputs.new_tag }}"
          echo "semver:"
          echo "  old: ${{ steps.tag.outputs.old_tag_semver }}"
          echo "  new: ${{ steps.tag.outputs.new_tag_semver }}"
          echo "draft: ${{ steps.tag.outputs.draft }}"
          echo "prerelease: ${{ steps.tag.outputs.prerelease }}"
